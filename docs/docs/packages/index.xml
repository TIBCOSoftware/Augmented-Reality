<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project ART – Packages</title>
    <link>https://tibcosoftware.github.io/Augmented-Reality/docs/packages/</link>
    <description>Recent content in Packages on Project ART</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://tibcosoftware.github.io/Augmented-Reality/docs/packages/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: 3D Assets - Unity3D Package</title>
      <link>https://tibcosoftware.github.io/Augmented-Reality/docs/packages/3d-assets/</link>
      <pubDate>Fri, 13 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/Augmented-Reality/docs/packages/3d-assets/</guid>
      <description>
        
        
        &lt;p&gt;With this Package you can used TIBCO Assets within Unity3D.&lt;/p&gt;
&lt;h3 id=&#34;import-into-unity3d&#34;&gt;Import into Unity3D&lt;/h3&gt;
&lt;p&gt;Just created a new Unity Project and import the custom Package.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;UnityAssets-Logo.png&#34; alt=&#34;alt-text&#34; title=&#34;Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;Unity3D Library Assets&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;The Package includes a Material: tibStandardBlue, and a Shader: tibStandardShader&lt;/p&gt;
&lt;h3 id=&#34;preview&#34;&gt;Preview&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;TIBCO-3DLogo.png&#34; alt=&#34;alt-text&#34; title=&#34;TIBCO Logo Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;TIBCO Logo with MRTK in Unity3D Preview-Mode&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&#34;content&#34;&gt;Content&lt;/h2&gt;
&lt;p&gt;ready to use &lt;a href=&#34;https://github.com/TIBCOSoftware/Augmented-Reality/tree/master/Unity/_Packages/TIBCO-Assets&#34;&gt;Package&lt;/a&gt; | 
Implementation &lt;a href=&#34;https://github.com/TIBCOSoftware/Augmented-Reality/tree/master/Unity/_Editor/TIBCO-Assets&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: 3D Charts - Unity3D Package</title>
      <link>https://tibcosoftware.github.io/Augmented-Reality/docs/packages/3d-charts/</link>
      <pubDate>Fri, 20 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/Augmented-Reality/docs/packages/3d-charts/</guid>
      <description>
        
        
        &lt;p&gt;This package helps to render easy 3D Charts within your Unity3D Application. All Charts fully created by using C# Scripting, with this they can fully dynamically be rendered with the provided Data in real-time.&lt;/p&gt;
&lt;p&gt;Open &amp;lsquo;TIBCOLabs &amp;gt; Charts &amp;gt; Chart Demo Scene&amp;rsquo;. The Scene contains all Charts provided here, plus a Scene Description Panel, and some Scene Decoration Assets.&lt;/p&gt;
&lt;p&gt;Some Assets using &amp;lsquo;TextMesh&amp;rsquo; others as well &amp;lsquo;TextMesh Pro&amp;rsquo;, so &amp;lsquo;TextMesh Pro&amp;rsquo; needs to be loaded into the Project Assets as soon you open the Scene and Unity3D is asking for this additional package.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;3DCharts.png&#34; alt=&#34;alt-text&#34; title=&#34;Demo Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;Unity3D Charts Demo Scene&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;All components fully re-sizeable and to work well together with e.g. MRTK in the right size. In case you like to render the charts without the transparent boxes surround, just disable the ‘Mesh Renderer’ inside Unity3D Inspector and the chart will render without the box surround.&lt;/p&gt;
&lt;h3 id=&#34;bar-chart&#34;&gt;Bar Chart&lt;/h3&gt;
&lt;p&gt;Generates multiple Bars with the scaled Box surround, it will automatically be extended if there are more than tow Bars and gets smaller in case there is only one Bar to display.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;BarChart.png&#34; alt=&#34;alt-text&#34; title=&#34;Bar Chart Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;Bar Chart Sample&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;BarChart-Settings.png&#34; alt=&#34;alt-text&#34; title=&#34;Bar Chart Settings Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;Bar Chart Settings&lt;/sup&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This Prefab can be instantiated easily at run-time so that all Settings can be dynamically applied.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;pie-chart&#34;&gt;Pie Chart&lt;/h3&gt;
&lt;p&gt;Generates a Pie Chart out of a number of Prefab Slices, this number is configurable and sizable.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;PieChart.png&#34; alt=&#34;alt-text&#34; title=&#34;Pie Chart Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;Pie Chart Sample&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;PieChart-Settings.png&#34; alt=&#34;alt-text&#34; title=&#34;Pie Chart Settings Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;Pie Chart Settings&lt;/sup&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This Prefab can be instantiated easily at run-time so that all Settings can be dynamically applied.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;import-into-unity3d&#34;&gt;Import into Unity3D&lt;/h2&gt;
&lt;p&gt;Just created a new Unity Project and import the custom Package.&lt;/p&gt;
&lt;h2 id=&#34;content&#34;&gt;Content&lt;/h2&gt;
&lt;p&gt;ready to use &lt;a href=&#34;https://github.com/TIBCOSoftware/Augmented-Reality/tree/master/Unity/_Packages/TIBCO-Charts&#34;&gt;Package&lt;/a&gt; |
Implementation &lt;a href=&#34;https://github.com/TIBCOSoftware/Augmented-Reality/tree/master/Unity/_Editor/TIBCO-Charts&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: TIBCO Cloud™ Messaging - Unity3D Package</title>
      <link>https://tibcosoftware.github.io/Augmented-Reality/docs/packages/cloud-messaging/</link>
      <pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/Augmented-Reality/docs/packages/cloud-messaging/</guid>
      <description>
        
        
        &lt;p&gt;The Implementation is based on standard UnityWebSocket and is working in Unity3D Editor, Android ARCore, and on Microsoft Hololens (UWP).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;TCM-AR.png&#34; alt=&#34;alt-text&#34; title=&#34;Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;TIBCO Cloud Messaging Panel&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;Once connected, the application can receive real-time messages and update the scene accordingly. It can also publish data to be consumed by other applications.&lt;/p&gt;
&lt;p&gt;The Package contains a simple sample Implementation that demonstrates how to display the received data in a Scene TextMesh and how to publish messages.&lt;/p&gt;
&lt;h3 id=&#34;trial-account&#34;&gt;Trial Account&lt;/h3&gt;
&lt;p&gt;register for your own TIBCO Cloud™ Messaging trial account on this &lt;a href=&#34;https://account.cloud.tibco.com/signup/tcm&#34;&gt;Sign-up Form&lt;/a&gt; to get your personal ID and Auth-Key under &amp;lsquo;Authentication Keys&amp;rsquo; Settings Tab, beside the Subscription &amp;lsquo;Status&amp;rsquo;.&lt;/p&gt;
&lt;h3 id=&#34;import-into-unity3d&#34;&gt;Import into Unity3D&lt;/h3&gt;
&lt;p&gt;Just created a new Unity Project and import the ready to use Package from the &lt;a href=&#34;https://github.com/TIBCOSoftware/Augmented-Reality/tree/master/Unity/_Packages/TIBCO-Cloud-Messaging/FTL-Basic&#34;&gt;Packages Folder&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;UnityAssets-FTL.png&#34; alt=&#34;alt-text&#34; title=&#34;Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;Unity3D Library Assets&lt;/sup&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;drag&#39;n drop the &amp;lsquo;MainController&amp;rsquo; Prefab into your scene&lt;/li&gt;
&lt;li&gt;drag&#39;n drop the &amp;lsquo;Text&amp;rsquo; Prefab into your scene&lt;/li&gt;
&lt;li&gt;drag&#39;n drop the &amp;lsquo;Text&amp;rsquo; Object from your scene to the &amp;lsquo;MainControler&amp;rsquo;, &amp;lsquo;SimpleTextViewController&amp;rsquo; Component to the &amp;lsquo;Text Mesh&amp;rsquo; Field&lt;/li&gt;
&lt;li&gt;configure your Web Socket URI and Authkey, in a file named &amp;lsquo;TIBCO-credentials.txt&amp;rsquo; placed in &lt;i&gt;TIBCOLabs &amp;gt; Utils &amp;gt; Resources &lt;/i&gt; folder.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;b&gt;done!&lt;/b&gt; Run Unity &amp;lsquo;Playmode&amp;rsquo;, and test first using cURL or Flogo - like described below.&lt;/p&gt;
&lt;h3 id=&#34;use-the-sample-scene&#34;&gt;Use the Sample scene&lt;/h3&gt;
&lt;p&gt;In the Unity project a test scene is available at
&lt;i&gt;TIBCOLabs &amp;gt; CloudMessaging &amp;gt; Sample &amp;gt; CloudMessaging-TestScene&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;The ARCore Implementation contains additionally a AR Sample scene: &lt;i&gt;TIBCOLabs &amp;gt; CloudMessaging &amp;gt; CloudMessaging-AR&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;The Scene contains a MainController Object.
In the MainController, you can update the Connection property prefix (default is &amp;ldquo;eftl&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;You can also modify the matcher list. The sample is subscribing to message containing the field &amp;ldquo;dataType&amp;rdquo;.
&lt;img src=&#34;FTLSocketConfig.png&#34; alt=&#34;alt-text&#34; title=&#34;Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;TIBCO Cloud Messaging FTL Configuration&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;The credentials, ie  Web Socket URI and Authkey must be declared in a file named &amp;ldquo;TIBCO-credentials.txt&amp;rdquo; and place in a Resources folder. You can use&lt;/p&gt;
&lt;p&gt;&lt;i&gt;TIBCOLabs &amp;gt; Utils &amp;gt; Resources&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;The folder contains a sample for you to copy.&lt;/p&gt;
&lt;p&gt;If you manage you credential file in git, it is a good practice to ignore TIBCO-credentials.txt so no credentials get checked-in with your source code.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;TIBCOCredentialsFile.png&#34; alt=&#34;alt-text&#34; title=&#34;Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;Credential file&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;The file must contain [prefix].socketurl and [prefix].authkey with the values from your TIBCO Cloud™ Subscription Details. [prefix] being defined in the connection configuration panel.&lt;/p&gt;
&lt;h2 id=&#34;sending-messages&#34;&gt;sending Messages&lt;/h2&gt;
&lt;p&gt;The sample is expecting this type of message:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;dataType&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Power&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;130&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The ARCore Sample supports as well an &amp;lsquo;Any&amp;rsquo; Datatype, more can be implemented in the &amp;lsquo;SimpleTextViewController&amp;rsquo; &amp;gt; &amp;lsquo;OnData&amp;rsquo; Handler.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;dataType&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Any&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;some Text/Alert from the Cloud&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;using-curl&#34;&gt;using cURL&lt;/h3&gt;
&lt;p&gt;TIBCO Cloud Messaging comes with a REST API, as well. So any REST Tool can be used for testing, too. Just replace [your-id] and [your-key] in the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -i -u :&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;your-key&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; https://messaging.cloud.tibco.com/tcm/TIB_SUB_&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;your-id&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;/channel/v1/publish -d &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{&amp;#34;dataType&amp;#34;:&amp;#34;Power&amp;#34;,&amp;#34;data&amp;#34;:&amp;#34;130&amp;#34;}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;using-flogo&#34;&gt;using Flogo&lt;/h3&gt;
&lt;p&gt;Here a sample using TIBCO Cloud™ Integration Flogo&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;FlogoTCMSender.png&#34; alt=&#34;alt-text&#34; title=&#34;Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;TIBCO Cloud Integration Configuration&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&#34;how-it-works&#34;&gt;How it works&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;The MainController GameObject contains the TIBCO Cloud™ Messaging Connector and SimpleTextViewController&lt;/li&gt;
&lt;li&gt;The SimpleTextViewController extends &amp;lsquo;OnData&amp;rsquo; Handler, it requires a connection (Connector Object) and receives messages.&lt;/li&gt;
&lt;li&gt;The SimpleTextViewController has a reference to the TextMesh to update when it receives a message.&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;the ARCore Sample Project uses &amp;lsquo;TextMeshPro&amp;rsquo; an a pre-defined Panel Object, instead of just &amp;lsquo;TextMesh&amp;rsquo;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;message-publication&#34;&gt;Message Publication&lt;/h2&gt;
&lt;p&gt;The sample is also publishing messages on the TIBCO Cloud™ Messaging channel. Those message have a field &amp;ldquo;demo_tcm&amp;rdquo; and can be viewed in the TIBCO Cloud™ Messaging demo.&lt;/p&gt;
&lt;p&gt;To see the message published by the app, simply use TIBCO Cloud™ Messaging Demo app :
From you TIBCO Cloud™ Messaging console, open the help panel and select &amp;ldquo;Run the demo&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;TCM-RunDemo.png&#34; alt=&#34;alt-text&#34; title=&#34;Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;Accessing TIBCO Cloud Messaging Demo app &lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;You will access the Demo app. Messages published by our sample application will appear in the Subscriber panel of this demo app.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;TCM-RunDemo-Panel.png&#34; alt=&#34;alt-text&#34; title=&#34;Image&#34;&gt;
&lt;br&gt;&lt;sup&gt;TIBCO Cloud Messaging Demo app panels &lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&#34;target-devices&#34;&gt;Target Devices&lt;/h2&gt;
&lt;p&gt;Tested with Microsoft Hololens, Android Smartphones, inside Unity Editor on Windows 10.&lt;/p&gt;
&lt;h2 id=&#34;used-versions&#34;&gt;Used Versions&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Unity (2019.2.18f1)&lt;/li&gt;
&lt;li&gt;Unity AR Foundations (3.1.0)&lt;/li&gt;
&lt;li&gt;Unity AR Subsystem (3.1.0)&lt;/li&gt;
&lt;li&gt;Unity ARCore XR Plugin (3.1.0)&lt;/li&gt;
&lt;li&gt;TIBCO Cloud Nimbus (Release Jan.2020)&lt;/li&gt;
&lt;li&gt;Android 10&lt;/li&gt;
&lt;li&gt;Google Pixel XL&lt;/li&gt;
&lt;li&gt;Microsoft Hololens V1,V2&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;content&#34;&gt;Content&lt;/h2&gt;
&lt;p&gt;ready to use &lt;a href=&#34;https://github.com/TIBCOSoftware/Augmented-Reality/tree/master/Unity/_Packages/TIBCO-Cloud-Messaging/FTL-Basic&#34;&gt;Package&lt;/a&gt; |
min. Implementation, as Unity Project &lt;a href=&#34;https://github.com/TIBCOSoftware/Augmented-Reality/tree/master/Unity/_Editor/TIBCO-Cloud-Messaging/FTL-Basic&#34;&gt;Source&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
